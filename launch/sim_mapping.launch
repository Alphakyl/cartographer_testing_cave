<!--
  Example launch file for octomap_server mapping:
  Listens to incoming PointCloud2 data and incrementally builds an octomap.
  The data is sent out in different representations.
  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details
-->
<launch>
	  <arg name="resolution"            default="0.15"/>
		<!-- Merged should be >= resolution -->
	  <arg name="merged_resolution"     default="0.15"/>
		<arg name="range"                 default="5.0"/>
		<arg name="vehicle_name"          default="X1"/>
		<arg name="planning_frame" default="world"/>
		<arg name="throttle_octomap_in" default="1"/>

  <group if="$(arg throttle_octomap_in)">
    <node pkg="topic_tools" type="throttle" name="octomap_in_throttler" respawn="true"
      args="messages points 10 octomap_in_throttled"/>
	  <node pkg="topic_tools" type="throttle" name="octomap_in_throttler2" respawn="true"
      args="messages front_rgbd/points 10 octomap_in_throttled"/>
  </group>

  <include file="$(find marble_mapping)/launch/marble_mapping.launch">
		<arg name="resolution" value="$(arg resolution)" />
		<arg name="merged_resolution" value="$(arg merged_resolution)" />

			<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
			<arg name="frame_id" value="$(arg planning_frame)" />

			<!-- maximum range to integrate (speedup!) -->
			<arg name="max_range" value="$(arg range)" />

			<arg name="sensor_model/hit" value=".95" />
			<arg name="sensor_model/miss" value=".45" />
			<arg name="sensor_model/min" value=".12" />
			<arg name="sensor_model/max" value=".97" />

			<!-- data source to integrate (PointCloud2) -->
			<arg name="cloud_in" value="octomap_in_throttled" />
	</include>

</launch>
